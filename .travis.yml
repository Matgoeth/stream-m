_deploy: &_deploy
  name: "${PROJECT_VERSION}"
  provider: releases
  api_key: "$GITHUB_OAUTH_TOKEN"
  skip_cleanup: true
  overwrite: true
  file_glob: true
  file: build/*-dist.zip
  on: &_deploy_on
    jdk: oraclejdk9

language: java
os: linux
group: edge
arch: arm64-graviton2
dist: xenial
virt: lxd

install: true
script: true

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
  - rm -f  $HOME/.gradle/caches/*/fileHashes/fileHashes.bin
  - rm -f  $HOME/.gradle/caches/*/fileHashes/fileHashes.lock

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

jobs:
  include:
    - script: ./gradlew check --stacktrace
      jdk: oraclejdk9
    - script: ./gradlew check --stacktrace
      jdk: oraclejdk17
    - stage: GitHub Release
      jdk: oraclejdk9
      script:
        - ./gradlew release
        - export PROJECT_VERSION=$(./gradlew -q printVersion)
      deploy:
        - <<: *_deploy
          prerelease: true
          draft: true
          name: "Test release ${PROJECT_VERSION}"
          on:
            <<: *_deploy_on
            branch: release-test
        - <<: *_deploy
          prerelease: true
          name: "Preview release ${PROJECT_VERSION}"
          on:
            <<: *_deploy_on
            all_branches: true
            condition: $TRAVIS_TAG =~ /^preview[-/].*$/
        - <<: *_deploy
          prerelease: true
          on:
            <<: *_deploy_on
            branch: master
            condition: $PROJECT_VERSION =~ ^.*SNAPSHOT$
        - <<: *_deploy
          on:
            <<: *_deploy_on
            branch: master
            condition: ! $PROJECT_VERSION =~ ^.*SNAPSHOT$
